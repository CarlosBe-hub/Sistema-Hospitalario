extends layout

block content
  .d-flex.justify-content-between.align-items-center.mb-3
    h2.mb-0 Listado y Gestión de Pacientes

  .d-flex.gap-3.mb-4
    .card.text-center(style="min-width: 150px;")
      .card-body
        h5.card-title Total Pacientes
        p.card-text#totalPacientes 0
    .card.text-center(style="min-width: 150px;")
      .card-body
        h5.card-title Femenino
        p.card-text.text-danger#totalFemenino 0
    .card.text-center(style="min-width: 150px;")
      .card-body
        h5.card-title Masculino
        p.card-text.text-primary#totalMasculino 0

  table#tablaPacientes.table.table-striped
    thead
      tr
        th Nombre
        th Apellido
        th DNI
        th Fecha Nac.
        th Género
        th Teléfono
        th Altura
        th Peso
        th Obra Social
        th Contacto Emergencia
        th Dirección
        th Estado
        th Acciones
    tbody
      each paciente in pacientes
        tr(data-dni=paciente.dni)
          td= paciente.nombre
          td= paciente.apellido
          td= paciente.dni
          td= paciente.fechaISO ? paciente.fechaISO.substring(0, 10) : ''
          td= paciente.genero
          td= paciente.telefono
          td= paciente.altura
          td= paciente.peso
          td= paciente.obraSocial ? paciente.obraSocial.nombre : 'No Posee'
          td= paciente.contacto_emergencia
          td= paciente.direccion
          td
            button.btn.btn-sm(
              class=paciente.estado === 'Activo' ? 'btn-success' : 'btn-secondary',
              onclick=`toggleEstado(${paciente.id_paciente}, this)`
            )= paciente.estado
          td
            a.btn.btn-warning.btn-sm(href=`/pacientes/${paciente.id_paciente}/editar`) Editar

  .modal.fade#nuevoPacienteModal(tabindex="-1", aria-labelledby="nuevoPacienteModalLabel", aria-hidden="true")
    .modal-dialog
      .modal-content
        .modal-header
          h5.modal-title#nuevoPacienteModalLabel Nuevo Paciente
          button.btn-close(type="button", data-bs-dismiss="modal", aria-label="Cerrar")
        form(method="POST", action="/pacientes")
          .modal-body
            .mb-3
              label.form-label(for="nombre") Nombre
              input.form-control(type="text", name="nombre", required)
              small.text-danger.d-none#error-nombre
            .mb-3
              label.form-label(for="apellido") Apellido
              input.form-control(type="text", name="apellido", required)
              small.text-danger.d-none#error-apellido
            .mb-3
              label.form-label(for="dni") DNI
              input.form-control(type="text", name="dni", id="dniNuevoPaciente", required)
              small.text-danger.d-none#error-dni
            .mb-3
              label.form-label(for="fecha_nacimiento") Fecha de Nacimiento
              input.form-control(type="date", name="fecha_nacimiento", required)
              small.text-danger.d-none#error-fecha_nacimiento
            .mb-3
              label.form-label(for="genero") Género
              select.form-select(name="genero", required)
                option(value="") Seleccionar
                option(value="Masculino") Masculino
                option(value="Femenino") Femenino
                option(value="Otro") Otro
              small.text-danger.d-none#error-genero
            .mb-3
              label.form-label(for="telefono") Teléfono
              input.form-control(type="text", name="telefono")
              small.text-danger.d-none#error-telefono
            .mb-3
              label.form-label(for="altura") Altura (cm)
              input.form-control(type="number", name="altura", step="0.1")
              small.text-danger.d-none#error-altura
            .mb-3
              label.form-label(for="peso") Peso (kg)
              input.form-control(type="number", name="peso", step="0.1")
              small.text-danger.d-none#error-peso
            .mb-3
              label.form-label(for="id_obra_social") Obra Social
              select.form-select(name="id_obra_social", required)
                option(value="") Seleccionar
                option(value="null") No posee seguro médico
                each obra in obrasSociales
                  option(value=obra.id_obra_social)= obra.nombre
              small.text-danger.d-none#error-id_obra_social
            .mb-3
              label.form-label(for="contacto_emergencia") Contacto de Emergencia
              input.form-control(type="text", name="contacto_emergencia")
            .mb-3
              label.form-label(for="direccion") Dirección
              input.form-control(type="text", name="direccion")
            .mb-3
              label.form-label(for="estado") Estado
              select.form-select(name="estado")
                option(value="Activo") Activo
                option(value="Inactivo") Inactivo
          .modal-footer
            button.btn.btn-secondary(type="button", data-bs-dismiss="modal") Cancelar
            button.btn.btn-primary(type="submit") Guardar

  #toastContainer.position-fixed.bottom-0.end-0.p-3(style="z-index: 9999")
    .toast#estadoToast(role="alert", aria-live="assertive", aria-atomic="true")
      .toast-header
        strong.me-auto Sistema
        small.text-muted Ahora
        button.btn-close(type="button", data-bs-dismiss="toast", aria-label="Cerrar")
      .toast-body#toastBody Estado actualizado correctamente.

  script(src="https://code.jquery.com/jquery-3.6.0.min.js")
  script(src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js")
  script(src="https://cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json")
  link(rel="stylesheet", href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css")

  script.
    $(document).ready(function() {
      const table = $('#tablaPacientes').DataTable({
        language: {
          url: 'https://cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
        },
        responsive: true,
        initComplete: function () {
          const buscarForm = `
            <div class="d-flex gap-2">
              <input id="buscarDniInput" class="form-control form-control-sm" placeholder="Buscar por DNI">
              <button class="btn btn-outline-primary btn-sm" id="btnBuscarDni">Buscar</button>
              <button class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#nuevoPacienteModal">
                <i class="fas fa-plus-circle me-1"></i> + Agregar Paciente
              </button>
            </div>
          `;
          $('#tablaPacientes_length').prepend(buscarForm);

          $('#btnBuscarDni').on('click', function () {
            const dni = $('#buscarDniInput').val().trim();
            if (!dni) return alert('Ingresá un DNI válido');

            fetch(`/pacientes/buscar?dni=${dni}`)
              .then(res => res.json())
              .then(data => {
                if (data && data.dni) {
                  const fila = $(`tr[data-dni="${dni}"]`);
                  if (fila.length) {
                    $('html, body').animate({
                      scrollTop: fila.offset().top - 100
                    }, 500);
                    fila.addClass('table-warning');
                    setTimeout(() => fila.removeClass('table-warning'), 3000);
                  }
                } else {
                  if (confirm('No se encontró el paciente. ¿Desea crear uno nuevo?')) {
                    $('#nuevoPacienteModal').modal('show');
                    $('#dniNuevoPaciente').val(dni);
                  }
                }
              })
              .catch(err => {
                console.error('Error buscando paciente', err);
                alert('Ocurrió un error al buscar el paciente');
              });
          });
        }
      });
    });

  script.
    function toggleEstado(id, button) {
      fetch(`/pacientes/${id}/toggle-estado`, { method: 'POST' })
        .then(response => response.json())
        .then(data => {
          button.textContent = data.estado;
          if (data.estado === 'Activo') {
            button.classList.remove('btn-secondary');
            button.classList.add('btn-success');
            mostrarToast('Paciente activado correctamente.', 'bg-success', 'text-white');
          } else {
            button.classList.remove('btn-success');
            button.classList.add('btn-secondary');
            mostrarToast('Paciente desactivado correctamente.', 'bg-secondary', 'text-white');
          }
        })
        .catch(error => {
          console.error('Error al cambiar el estado:', error);
          mostrarToast('Error al cambiar el estado.', 'bg-warning', 'text-dark');
        });
    }

    function mostrarToast(mensaje, fondo, texto) {
      const toast = document.getElementById('estadoToast');
      const body = document.getElementById('toastBody');
      toast.className = `toast ${fondo} ${texto}`;
      body.textContent = mensaje;
      const bsToast = new bootstrap.Toast(toast);
      bsToast.show();
    }

    function actualizarContadores() {
      const pacientes = !{JSON.stringify(pacientes)};
      const total = pacientes.length;
      const femenino = pacientes.filter(p => p.genero === 'Femenino').length;
      const masculino = pacientes.filter(p => p.genero === 'Masculino').length;

      document.getElementById('totalPacientes').textContent = total;
      document.getElementById('totalFemenino').textContent = femenino;
      document.getElementById('totalMasculino').textContent = masculino;
    }

    document.addEventListener('DOMContentLoaded', function () {
      actualizarContadores();

      const form = document.querySelector('form[action="/pacientes"]');
      const fields = {
        nombre: { required: true },
        apellido: { required: true },
        dni: { required: true, pattern: /^\d{7,9}$/, message: 'El DNI debe tener entre 7 y 9 dígitos numéricos.' },
        fecha_nacimiento: { required: true },
        genero: { required: true },
        telefono: { required: false, pattern: /^[\d\s\-+()]{7,20}$/, message: 'Teléfono inválido.' },
        altura: { required: false, pattern: /^\d+(\.\d{1,2})?$/, message: 'Altura debe ser un número válido.' },
        peso: { required: false, pattern: /^\d+(\.\d{1,2})?$/, message: 'Peso debe ser un número válido.' },
        id_obra_social: { required: true }
      };

      form.addEventListener('submit', function (e) {
        let valid = true;

        Object.entries(fields).forEach(([field, rules]) => {
          const input = form.elements[field];
          const error = document.getElementById('error-' + field);
          if (!input || !error) return;
          let value = input.value.trim();
          let fieldValid = true;
          let errorMessage = '';

          if (rules.required && (!value || value === '')) {
            fieldValid = false;
            errorMessage = 'Este campo es obligatorio.';
          } else if (rules.pattern && value && !rules.pattern.test(value)) {
            fieldValid = false;
            errorMessage = rules.message || 'Valor inválido.';
          }

          if (!fieldValid) {
            error.classList.remove('d-none');
            error.textContent = errorMessage;
            valid = false;
          } else {
            error.classList.add('d-none');
            error.textContent = '';
          }
        });

        if (!valid) e.preventDefault();
      });
    });
